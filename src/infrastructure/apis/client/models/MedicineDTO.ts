/* tslint:disable */
/* eslint-disable */
/**
 * MobyLab Web App
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MedicineCategoryDTO } from './MedicineCategoryDTO';
import {
    MedicineCategoryDTOFromJSON,
    MedicineCategoryDTOFromJSONTyped,
    MedicineCategoryDTOToJSON,
} from './MedicineCategoryDTO';
import type { MedicineTypeDTO } from './MedicineTypeDTO';
import {
    MedicineTypeDTOFromJSON,
    MedicineTypeDTOFromJSONTyped,
    MedicineTypeDTOToJSON,
} from './MedicineTypeDTO';
import type { SupplierDTO } from './SupplierDTO';
import {
    SupplierDTOFromJSON,
    SupplierDTOFromJSONTyped,
    SupplierDTOToJSON,
} from './SupplierDTO';

/**
 * 
 * @export
 * @interface MedicineDTO
 */
export interface MedicineDTO {
    /**
     * 
     * @type {string}
     * @memberof MedicineDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof MedicineDTO
     */
    medicineName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof MedicineDTO
     */
    medicineDescription?: string | null;
    /**
     * 
     * @type {number}
     * @memberof MedicineDTO
     */
    medicinePrice?: number;
    /**
     * 
     * @type {number}
     * @memberof MedicineDTO
     */
    medicineMeasurement?: number;
    /**
     * 
     * @type {number}
     * @memberof MedicineDTO
     */
    quantity?: number;
    /**
     * 
     * @type {Date}
     * @memberof MedicineDTO
     */
    expiryDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof MedicineDTO
     */
    image?: string | null;
    /**
     * 
     * @type {MedicineTypeDTO}
     * @memberof MedicineDTO
     */
    medicineType?: MedicineTypeDTO;
    /**
     * 
     * @type {MedicineCategoryDTO}
     * @memberof MedicineDTO
     */
    medicineCategory?: MedicineCategoryDTO;
    /**
     * 
     * @type {SupplierDTO}
     * @memberof MedicineDTO
     */
    supplier?: SupplierDTO;
}

/**
 * Check if a given object implements the MedicineDTO interface.
 */
export function instanceOfMedicineDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MedicineDTOFromJSON(json: any): MedicineDTO {
    return MedicineDTOFromJSONTyped(json, false);
}

export function MedicineDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): MedicineDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'medicineName': !exists(json, 'medicineName') ? undefined : json['medicineName'],
        'medicineDescription': !exists(json, 'medicineDescription') ? undefined : json['medicineDescription'],
        'medicinePrice': !exists(json, 'medicinePrice') ? undefined : json['medicinePrice'],
        'medicineMeasurement': !exists(json, 'medicineMeasurement') ? undefined : json['medicineMeasurement'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'expiryDate': !exists(json, 'expiryDate') ? undefined : (new Date(json['expiryDate'])),
        'image': !exists(json, 'image') ? undefined : json['image'],
        'medicineType': !exists(json, 'medicineType') ? undefined : MedicineTypeDTOFromJSON(json['medicineType']),
        'medicineCategory': !exists(json, 'medicineCategory') ? undefined : MedicineCategoryDTOFromJSON(json['medicineCategory']),
        'supplier': !exists(json, 'supplier') ? undefined : SupplierDTOFromJSON(json['supplier']),
    };
}

export function MedicineDTOToJSON(value?: MedicineDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'medicineName': value.medicineName,
        'medicineDescription': value.medicineDescription,
        'medicinePrice': value.medicinePrice,
        'medicineMeasurement': value.medicineMeasurement,
        'quantity': value.quantity,
        'expiryDate': value.expiryDate === undefined ? undefined : (value.expiryDate.toISOString()),
        'image': value.image,
        'medicineType': MedicineTypeDTOToJSON(value.medicineType),
        'medicineCategory': MedicineCategoryDTOToJSON(value.medicineCategory),
        'supplier': SupplierDTOToJSON(value.supplier),
    };
}

